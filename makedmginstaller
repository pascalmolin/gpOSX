#!/bin/sh
# make a .dmg applescript installer

if [ $# -ne 3 ]; then
  cat <<EOS
  USAGE:
    $0 <name> <dir> <target>
    makes a dmg installer named <name>.dmg
    for installing <dir> into directory <target>

  EXAMPLE:

    $0 elldata data/elldata /usr/local/share/pari/
    
EOS
  exit 1
fi


DMG=$1
# directory to install
FROM=$2
# target
TO=$3

NAME=$(basename $2)

if [ ! -e ${FROM} ]; then
  echo "error: no such files ${FROM}"
  exit 1
fi

# first create the install script
ROOT=Install.app
echo "1. create ${ROOT}"

rm -rf ${ROOT}
cat <<-EOF | osacompile -o ${ROOT}
try
  set dmgpath to POSIX path of (path to resource "${NAME}") 
  -- go around stupid cp -R behaviour
  if dmgpath ends with "/" then
    set dmgpath to text 1 thru -2 of dmgpath
  end if
  -- display dialog "cp -r  " & quoted form of dmgpath & " ${TO}" buttons {"OK"} with title "Install ${NAME}" with icon note
  -- do shell script "cp -R " & dmgpath & " ${TO}" with administrator privileges
  do shell script "exit 1"
  do shell script "cp -R " & quoted form of dmgpath & " ${TO}"
  tell me to activate
  display dialog "${NAME} successfully installed." buttons {"OK"} default button 1 with title "Install ${NAME}" with icon note
on error
  tell me to activate
  display dialog "You can do manually cp -R " & dmgpath & "
  ${TO}" & return buttons {"OK"} default button 1 with title "Error installing ${NAME}" with icon 0
end try
EOF

# add the data inside
RESOURCES=${ROOT}/Contents/Resources
echo "2. add data from ${FROM}"
cp -r ${FROM} ${RESOURCES}/

# also change the icon for Pari
cp -f images/PariGP.icns ${RESOURCES}/applet.icns

# Now Install.app can be put into a nice dmg

# temporary dmg

SIZE=$(du -ms ${ROOT} | awk '{print (int($1*1.2)+2)}') # get size + extra
TMPDMG=${DMG}.tmp.dmg
VOLUME="${DMG}_installer"

echo "3. embed into ${TMPDMG} of size ${SIZE}"
rm -f ${TMPDMG}
hdiutil create -srcfolder "${ROOT}" \
  -volname "${VOLUME}" -fs HFS+ -fsargs "-c c=64,a=16,e=16" \
  -format UDRW -size "${SIZE}m" ${TMPDMG}

## add background and turn into a nice installer

MOUNTED=/Volumes/${VOLUME}
echo "4. mount into ${MOUNTED} and set finder window"

if [ -e ${MOUNTED} ]; then
  echo "error: disk ${MOUNTED} in use."
  exit 1;
fi

device=$(hdiutil attach -readwrite -noverify -noautoopen "${TMPDMG}" | \
             egrep '^/dev/' | sed 1q | awk '{print $1}')
sleep 5

mkdir -p ${MOUNTED}/.background
cp images/install_click.png ${MOUNTED}/.background/install.png

cat <<EOF | osascript
tell application "Finder"
     tell disk "${VOLUME}"
           open
           set current view of container window to icon view
           set toolbar visible of container window to false
           set statusbar visible of container window to false
           set the bounds of container window to {400, 100, 800, 333}
           set theViewOptions to the icon view options of container window
           set arrangement of theViewOptions to not arranged
           set icon size of theViewOptions to 64
           set background picture of theViewOptions to file ".background:install.png"
           set position of item "${ROOT}" of container window to {200, 110}
           update without registering applications
           delay 5
           -- eject
     end tell
   end tell
EOF

chmod -Rf go-w ${MOUNTED}
sync
sync

## final dmg
echo "5. unmount and compress into into final ${DMG}"

hdiutil detach ${device}
rm -f ${DMG}.dmg
hdiutil convert "${TMPDMG}" -format UDZO -imagekey zlib-level=9 -o ${DMG}

echo "Build complete."
