#!/bin/sh
# make a .dmg to 
# either drag and drop
# or run install script

# options
BG=0 # do not set background image
type="drag" # or "installer"
iconfile=images/PariGP.icns

args=$(getopt ib: $*)
set -- $args

while true; do
  case $1 in
    -i)
      shift;
      type="installer"
      ;;
    -b)
      shift;
      BG=1
      bgfile=$1
      shift;
      ;;
    --)
      shift;
      break;
      ;;
  esac;
done;

if [ $# -ne 3 ]; then
  cat <<EOS
  USAGE:
    $0 [-i] [-b backgound] <name> <dir> <target>
    makes a dmg image of <dir> named <name>.dmg
    drag and drop into directory <target>

  OPTIONS:
    -i makes shell installer instead of drag and drop window
    -b bgimage.png puts bgimage.png in backgound of the Finder
       bgimage.png _must_ be a 400x233 png at 72dpi.

  EXAMPLE:

    $0 PariGP-2.5.3 /Applications/PariGP.app /Applications

    $0 -i elldata data/elldata /usr/local/share/pari/

    
EOS
  exit 1
fi

DMG=$1
# directory to install
FROM=$2
# target
TO=$3

if [ ! -e ${FROM} ]; then
  echo "error: no such files ${FROM}"
  exit 1
fi

LabelFrom=$(basename ${FROM})
LabelTo=$(basename ${TO})
TMPDMG=${DMG}.tmp.dmg
VOLUME="${DMG}"
MOUNTED=/Volumes/${VOLUME}
if [ -e ${MOUNTED} ]; then
  echo "error: mount point ${MOUNTED} already used."
  exit 1;
fi

# optional step 0: create install script
if [ ${type} = "installer" ]; then
  ROOT=Install.app
  echo "0. create ${ROOT}"
  
  rm -rf ${ROOT}
  cat <<-EOF | osacompile -o ${ROOT}
  try
  set dmgpath to POSIX path of (path to resource "${LabelFrom}") 
    -- go around stupid cp -R behaviour
    if dmgpath ends with "/" then
      set dmgpath to text 1 thru -2 of dmgpath
    end if
    -- do shell script "cp -R " & quoted form of dmgpath & " ${TO}" with administrator privileges
    do shell script "cp -R " & quoted form of dmgpath & " ${TO}"
    tell me to activate
    display dialog "${LabelFrom} successfully installed." buttons {"OK"} default button 1 with title "Install ${LabeFrom}" with icon note
  on error
    tell me to activate
    display dialog "You can do manually cp -R " & dmgpath & "
    ${TO}" & return buttons {"OK"} default button 1 with title "Error installing ${LabelFrom}" with icon 0
  end try
EOF
  
  # add the data inside
  RESOURCES=${ROOT}/Contents/Resources
  echo "0.1 add data from ${FROM}"
  cp -r ${FROM} ${RESOURCES}/
  
  if [ -e ${iconfile} ]; then
    # also change the icon for Pari
    cp -f ${iconfile} ${RESOURCES}/applet.icns
  fi

  LabelFrom=Install.app

else
  ROOT=${FROM}
fi


# make temporary dmg

SIZE=$(du -ms ${ROOT} | awk '{print (int($1*1.3)+5)}') # get size + extra

echo "1. embed into ${TMPDMG} of size ${SIZE}"
rm -f ${TMPDMG}
hdiutil create -srcfolder "${ROOT}" \
  -volname "${VOLUME}" -fs HFS+ -fsargs "-c c=64,a=16,e=16" \
  -format UDRW -size "${SIZE}m" ${TMPDMG}

sleep 2

## turn into finder window installer

echo "2. mount into ${MOUNTED} and set finder window"

device=$(hdiutil attach -readwrite -noverify -noautoopen "${TMPDMG}" | \
             egrep '^/dev/' | sed 1q | awk '{print $1}')
sleep 1

if [ ${BG} -ne 0 ]; then
  mkdir -p ${MOUNTED}/.background
  cp ${bgfile} ${MOUNTED}/.background/install.png
  bcom=""
else
  bcom="-- "
fi
if [ ${type} = "installer" ]; then
  dcom="-- "
  icom=""
else
  dcom=""
  icom="-- "
fi

cat <<EOF | osascript
tell application "Finder"
     tell disk "${VOLUME}"
           open
           set current view of container window to icon view
           set toolbar visible of container window to false
           set statusbar visible of container window to false
           set the bounds of container window to {400, 100, 800, 333}
           set theViewOptions to the icon view options of container window
           set arrangement of theViewOptions to not arranged
           set icon size of theViewOptions to 72
           ${bcom}set background picture of theViewOptions to file ".background:install.png"
           ${icom}set position of item "${LabelFrom}" of container window to {200, 110}
           ${dcom}set position of item "${LabelFrom}" of container window to {80, 110}
           ${dcom}make new alias file at container window to POSIX file "${TO}" with properties {name:"${LabelTo}"}
           ${dcom}set position of item "${LabelTo}" of container window to {320, 110}
           update without registering applications
           delay 5
           -- eject
     end tell
   end tell
EOF

if [ -e ${MOUNTED}/.Trashes ] || [ -e ${MOUNTED}/.fseventsd ]; then
  echo "Need to remove Spotlight folders with admin privileges"
  sudo rm -rf ${MOUNTED}/.Trashes ${MOUNTED}/.fseventsd
fi
chmod -Rf go-w ${MOUNTED}
sync
sync

sleep 3 # Finder may need time

## final dmg
echo "3. unmount and compress into into final ${DMG}"

hdiutil detach ${device}
rm -f ${DMG}.dmg
hdiutil convert "${TMPDMG}" -format UDZO -imagekey zlib-level=9 -o ${DMG}
rm -f ${TMPDMG}

echo "Build complete."
